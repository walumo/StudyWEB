
@{
    ViewData["Title"] = "Topics";
    List<StudyWEB.Models.Task> tasks = (List<StudyWEB.Models.Task>)ViewData["tasks"];
    List<Topic> topics = (List<Topic>)ViewData["topics"];
}

<!--Accordion to be populated with topics-->
<div class="text-center">
    <div class="accordion" id="topicsAccordion">
        @foreach (Topic topic in topics)
        {
            int taskIndex = topics.IndexOf(topic);
            var taskBuffer = tasks.Where(x => x.TopicId == topic.TopicId).ToList();
            string details = "detailsOf" + topic.TopicId;
            <div class="card z-depth-0 bordered">
                <div class="card-header blueGradient" id="@topic.TopicId">
                    <h5 class="mb-0">
                        <button class="btn" type="button" data-toggle="collapse" data-target="#@details"
                                aria-expanded="true" aria-controls="@details">
                            <h1 class="text-light">@topic.TopicTitle</h1>
                            <p class="text-light">@topic.TopicDescription</p>
                        </button>
                    </h5>
                </div>
                <div id="@details" class="collapse" aria-labelledby="@topic.TopicId"
                     data-parent="#topicsAccordion">
                    <div class="card-body">
                        <dl>
                            <dt>Deadline:</dt>
                            <dd>@topic.TopicCompletionDate.ToLocalTime()</dd>
                        </dl>
                        @foreach(StudyWEB.Models.Task task in topics[taskIndex].Tasks)
                        {
                            <p>@task.TaskTitle</p>
                            //override .ToString() for Task to accommodate better output???
                            //or find a way to iterate through notes list in task object!!!
                        }
                    </div>
                </div>
            </div>
           }
    </div>
</div>


